doctype html
html
  head
    title= site_title
    = stylesheet_link_tag    'application'
    = javascript_include_tag 'application'

    = auto_discovery_link_tag :atom, 'posts/feed'
    = auto_discovery_link_tag :rss, 'posts/feed.rss'
    link type='text/plain' rel='author' href='/humans.txt'

    = csrf_meta_tags

  body
    #wrapper
      header
        h1= link_to "Quill", root_url
        nav
          - cache("header", :expires_in => 1.day) do
            ul
              li= link_to "Home", root_url
              - header_pages.each do |page|
                li id="header_page_#{page.id}"= link_to page.title, page_url(page)

      p.notice= notice
      p.alert= alert

      section#main(data-pjax-container)
        = yield

      aside
        - cache("sidebar", :expires_in => 1.day) do
          = render :partial => 'pages/page', :collection => sidebar_pages

      footer
        #archives
          h4 Post Archives
          - cache("archives", :expires_in => 1.day) do
            dl
              - (start_year..Time.now.strftime("%Y")).reverse_each do |year|
                dt
                  - posts = Post.where(:created_at => Time.parse("Jan 01 #{year}")..(Time.parse("Jan 01 #{year}") + 1.year))
                  - unless posts.empty?
                    = link_to year, archives_path + '/date/' + year
                    - (01..12).each do |month|
                      - unless posts.empty?
                        - m = posts.first.created_at.strftime("%-m").to_i 
                        - if m == month
                          dd= link_to Date::ABBR_MONTHNAMES[month], archives_url + '/date/' + year + '/' + Date::MONTHNAMES[month]
                          - posts.shift
                        - if m > month
                          dd= Date::ABBR_MONTHNAMES[month]
                        - while m < month
                          - posts.shift
                      - else
                        dd= Date::ABBR_MONTHNAMES[month]
                  - else
                    = year
                    - (01..12).each do |month|
                      dd= Date::ABBR_MONTHNAMES[month]

        #twitter
          - cache("tweets", :expires_in => 1.minute) do
            - rate_limit_status = Twitter.rate_limit_status
            - if rate_limit_status.remaining_hits > 0
              - @twitter = Twitter.user(Author.first.twitter)
              p= raw auto_link(@twitter.status.text)
              #triangle
              = link_to image_tag(@twitter.profile_image_url), 'http://twitter.com/' + @twitter.screen_name
            - else
              p Rate Limit Exceeded
              #triangle
              = link_to Author.first.gravatar_url, 'http://twitter.com/' + @twitter.screen_name
          #copyright
            span
              | &copy; Copyright #{Time.new.strftime("%Y")} Ian Mitchell. Based on 
              = link_to 'Quill', 'http://quill.herokuapp.com', { :target => '_blank' }

    javascript:
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', '#{ENV['GOOGLE_ANALYTICS']}']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
       })();